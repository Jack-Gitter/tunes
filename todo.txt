tunes todos:

endpoints: 
    middleware: 
        validation middleware that takes in an object, and does c.bindwithjson. we can also test business logic there. if it errors, then we error and abort
    general: 
        clean up endpoint names
    user
        followers pagination -- broken
    posts
        removeVote endpoint 
        postpreviewpagination -- broken
        like another post -- make sure to update postpreview to get the likes/dislikes
        unlike a post  -- make sure to update post preview to get the likes/dislikes
    comments
        create
        read (paginated)
        update
        delete
        
caching:
    redis 
        read up on caching techniques!!! 

dockerize:
    postgres
    redis

admin: 
    cors

caching questions: 
    i validate cadhe on every data change — what about data race with get and data change where data change clears cache but get reaches db first and caches data?
    also updating cache after db writes — we have one post then another which changes a value. A hits db first then b, but b writes to cache first then a. how to prevent?

testing:
    implement tests -- e2e test with testing library!
    implement a git workflow to run tests on push

general: 
    swagger?
    rework file structure?
