tunes todos:

errors: 
    handle expected errors like duplicate inserts, no user found and then return accordingly from them
    clean up errors

database: 
    make migrations runnable

endpoints: 
    general: 
        clean up endpoint names
    user
    posts
        like another post
        unlike a post
    comments
        create
        read (paginated)
        update
        delete
        
caching:
    redis 
        read up on caching techniques!!! 

dockerize:
    postgres
    redis

admin: 
    cors


caching questions: 
    i validate cadhe on every data change — what about data race with get and data change where data change clears cache but get reaches db first and caches data?
    also updating cache after db writes — we have one post then another which changes a value. A hits db first then b, but b writes to cache first then a. how to prevent?

testing:
    implement tests -- e2e is difficult
    implement a git workflow to run tests on push

general: 
    swagger?
    rework file structure?
