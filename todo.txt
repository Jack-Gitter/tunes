tunes todos:

general 

endpoints:

testing:
    test all of the endpoints again!!!! lmao kms

documentation: 
    readme
        explain what this project is
        explain auth -- double submit cookies
        explain database schema
        explain goose/database migrations
        explain dockerization
        explain error handling middleware
        explain auth middleware
        explain transaction retries/isolation level race conditions
        explain JWT/spotify login
        explain swagger usage 
        caching/redis approach

dockerize:
    postgres
    redis

caching:
    redis 
        read up on caching techniques!!!  -- or do in memory lol, i'm a lazy bitch

testing:
    implement tests -- e2e test with testing library!
    implement a git workflow to run tests on push

admin: 
    cors

caching questions: 
    i validate cadhe on every data change — what about data race with get and data change where data change clears cache but get reaches db first and caches data?
    also updating cache after db writes — we have one post then another which changes a value. A hits db first then b, but b writes to cache first then a. how to prevent?
